<?php

namespace Models;

use App\Models\Category;
use App\Models\Traits\Uuid;
use Illuminate\Database\Eloquent\SoftDeletes;
use PHPUnit\Framework\TestCase;
use Tests\Traits\TestDates;

class CategoryTest extends TestCase
{
    use TestDates;
    private $category;

    public static function setUpBeforeClass(): void
    {
        //parent::setUpBeforeClass();
    }

    public static function tearDownAfterClass(): void
    {
        parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
    }

    protected function setUp(): void
    {
        parent::setUp();
        $this->category = new Category();
    }

    public function getModel()
    {
        return $this->category;
    }

    public function testFillable()
    {
        $fillable =  [
            'name',
            'description',
            'is_active'
        ];

        $this->assertEquals($fillable, $this->category->getFillable());
    }

    public function testUseRequiredTraits()
    {
        $traits = [
            SoftDeletes::class,
            Uuid::class
        ];

        $classUsedClasses = array_keys(class_uses(Category::class));

        $this->assertEquals($traits,$classUsedClasses);
    }

    public function testKeyType()
    {
        $keyType = 'string';
        $this->assertEquals($keyType, $this->category->getKeyType());
    }

    public function testIncrementing()
    {
        $this->assertFalse($this->category->incrementing);
    }
}
